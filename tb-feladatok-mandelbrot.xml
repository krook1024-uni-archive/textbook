<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Mandelbrot!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>
    <section>
        <title>A Mandelbrot halmaz</title>
		
		<para>
			<emphasis role="strong">Megoldás forrása:</emphasis>
			<link xlink:href="https://github.com/krook1024/textbook/tree/master/files/mandelb/mandelbrot">
				github/krook1024/textbook/mandelbrot
			</link>
		</para>

		<para>
			Ebben a C++ programban a Mandelbrot halmazt ábrázoljuk egy képen. 		
			A Mandelbrot halmaz egy olyan komplex halmaz, amelyre igaz, hogy a
			<inlineequation>
				<alt role="tex">f_c(z) = z^2 + c</alt>
				<mathphrase/>
			</inlineequation>
			függvény nem divergál, ha nullától iteráljuk, tehát a
			<inlineequation>
				<alt role="tex">f_c(0), f_c(f_c(0)), ...</alt>
				<mathphrase/>
			</inlineequation>
			abszolútértekben korlátos.
		</para>

		<para>
			Amennyiben a forrásfájlt egyszerűen <code>make</code>-el lefordítjuk,
			úgy láthatjuk, hogy létrejön a kimenet.png, hiszen a
			<code>Makefile</code>-unkban úgy adtuk meg, hogy a forrást ne csak
			lefordítsa, hanem futtassa is a programunkat <code>kimenet.png</code>
			kimenettel. A kimenetet be is ágyazom, mert meglehetősen látványos.
		</para>

		<figure>
			<title>A Mandelbrot halmaz</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="./files/mandelb/mandelbrot/kimenet.png" width="50%"/>
				</imageobject>
				<textobject>
					<phrase>A Mandelbrot halmaz</phrase>
				</textobject>
			</mediaobject>
		</figure>

		<para>
			A program alapját a <emphasis>png++</emphasis> C++ könyvtár adja, amely egy 
			wrapper a C-s <emphasis>libpng</emphasis> könyvtárra.
		</para>
		<para>
			Ebben a programban viszont nem használjuk a <code>std::complex</code>
			osztályt, amit a C++ biztosít, hanem egyszerűen magunknak
			adunk meg egy <code>Komplex</code> struktúrát, mely egyszerűen
			tartalmaz két double változót, ami megfeleltethető a komplex számok
			valós és imaginárius értékeinek. A további működési elv mindössze
			annyi, hogy megadunk egy halmazt, amelyre a megadott egyenletünk
			illeszkedik, majd végigmegyünk ezen a halmazon, és beszínezzük
			az erre alkalmaz pixeleket.
		</para>

    </section>

    <section>
        <title>A Mandelbrot halmaz a <filename>std::complex</filename> osztállyal</title>
       <para>
		   <emphasis role="strong">Megoldás forrása:</emphasis>
		   <link xlink:href="https://github.com/krook1024/textbook/tree/master/files/mandelb/mandelbrot_komplex">
				github/krook1024/textbook/mandelb/mandelbrot_komplex/
		   </link>
	   </para>

		<para>
			Ebben a programban, hasonlóan az előzőhöz, a Mandelbrot halmazt
			ábrázoltatjuk. A különbség csupán annyi, hogy itt a beépített
			<code>std::complex</code> osztályt használjuk, ahelyett, hogy saját
			struktúrát írnánk a komplex számok tárolására.
		</para>

    </section>

    <section>
        <title>Biomorfok</title>
        <para>
        </para>
        <para>
            Megoldás videó: <link xlink:href="https://youtu.be/IJMbgRzY76E">https://youtu.be/IJMbgRzY76E</link>
        </para>
        <para>
            Megoldás forrása: <link xlink:href="https://gitlab.com/nbatfai/bhax/tree/master/attention_raising/Biomorf">https://gitlab.com/nbatfai/bhax/tree/master/attention_raising/Biomorf</link>
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section>

    <section>
        <title>A Mandelbrot halmaz CUDA megvalósítása</title>
        <para>
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:
        </para>
    </section>

    <section>
        <title>Mandelbrot nagyító és utazó C++ nyelven</title>
        <para>
            Építs GUI-t a Mandelbrot algoritmusra, lehessen egérrel nagyítani egy területet, illetve egy pontot
            egérrel kiválasztva vizualizálja onnan a komplex iteréció bejárta z<subscript>n</subscript> komplex számokat!
        </para>

        <para>
            Megoldás forrása:
        </para>

        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:
        </para>
    </section>

    <section>
        <title>Mandelbrot nagyító és utazó Java nyelven</title>
        <para>
        </para>
    </section>

</chapter>
