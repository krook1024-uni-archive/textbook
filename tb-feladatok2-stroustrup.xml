<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Stroustrup!</title>
    </info>
    <section>
        <title>JDK osztályok</title>
        <para>
            Írjunk olyan Boost C++ programot (indulj ki például a fénykardból)
            amely kilistázza a JDK összes osztályát (miután kicsomagoltuk az
            src.zip állományt, arra ráengedve)!
        </para>
        <para>
            A JDK forráskódját megszerezhetjük például az alábbi parancsok
            kiadásával (Linux alatt):
        </para>
        <screen>
<![CDATA[$ wget https://download.java.net/java/GA/jdk13/5b8a42f3905b406298b72d750b6919f6/33/GPL/openjdk-13_linux-x64_bin.tar.gz
$ tar -zxvf openjdk-13_linux_x64_bin.tar.gz
$ mv jdk-13/lib/src.zip .
$ unzip src.zip]]>
        </screen>
        <para>
            Ha minden rendben van, akkor most van egy <filename>src</filename>
            mappánk, ami tartalmazza a JDK forrásait. A következő dolog,
            amire szükségünk lesz, az a Boost C++ könyvtárak, amit telepíthetünk
            (Arch Linux alatt) például a következő parancs kiadásával:
        </para>
        <screen>
<![CDATA[$ pacman -S boost boost-libs]]>
        </screen>
        <para>
            Ezután már a könyv repójának a
            <filename>files/stroustrup/JDK_Classes</filename> mappájában
            található <filename>Makefile</filename> segítségével egyszerűen
            fordítható a programunk.
        </para>
        <para>
            A forráskód működése egyszerű: egy vektorba beolvassuk az
            összes fájlt, ami a bizonyos <filename>src</filename> mappában van,
            majd belenézünk az összesbe, és keressünk a
            <filename>class</filename> kulcssszót kiegészítve a fájl nevével.
            Amennyiben találunk ilyet, akkor azt tároljuk és legvégül
            kiíratjuk. A trükk, hogy mivel a Java konvenció azt mondja,
            hogy az osztály nevének egyeznie kell a fájl nevével, csak az olyan
            fájlokat számoljuk, amik azt az osztályt tartalmazzák, amiknek
            mondják magukat.
        </para>
        <programlisting language="C++">
            <textobject>
                <textdata
                fileref="./files/stroustrup/JDK_Classes/jdk_classes.cc"/>
            </textobject>
        </programlisting>
        <para>
            Egy példa kimenet itt látható:
        </para>
        <screen>
<![CDATA[$ ./jdk_classes
...
AgentLoadException (file: "/home/b1/src/jdk.attach/com/sun/tools/attach/AgentLoadException.java")
AttachPermission (file: "/home/b1/src/jdk.attach/com/sun/tools/attach/AttachPermission.java")
AttachOperationFailedException (file: "/home/b1/src/jdk.attach/com/sun/tools/attach/AttachOperationFailedException.java")
AttachProvider (file: "/home/b1/src/jdk.attach/com/sun/tools/attach/spi/AttachProvider.java")
HotSpotAttachProvider (file: "/home/b1/src/jdk.attach/sun/tools/attach/HotSpotAttachProvider.java")
HotSpotVirtualMachine (file: "/home/b1/src/jdk.attach/sun/tools/attach/HotSpotVirtualMachine.java")
AttachProviderImpl (file: "/home/b1/src/jdk.attach/sun/tools/attach/AttachProviderImpl.java")
VirtualMachineImpl (file: "/home/b1/src/jdk.attach/sun/tools/attach/VirtualMachineImpl.java")
There are 15314 classes in JDK (sources dir: "/home/b1/src").]]>
        </screen>
    </section>
    <section>
        <title>Másoló-mozgató szemantika</title>
        <para>
            Kódcsipeteken (copy és move ctor és assign) keresztül vesd össze a
            C++11 másoló és a mozgató szemantikáját, a mozgató konstruktort
            alapozd a mozgató értékadásra!
        </para>
        <para>
            Ebben a feladatban a C++ másoló és mozgató szemantikáját hasonlítjuk
            össze, úgy, hogy előbb megírjuk a másoló konstruktort, majd erre
            alapozzuk mozgató konstruktort is.
        </para>
        <para>
            Ehhez létrehozunk egy <filename>Data</filename> osztályt, ami
            mindössze egy <function>n</function> számot fog tartalmazni.
        </para>
        <para>
            <emphasis role="strong">Megoldás forrása:</emphasis>
        </para>
        <programlisting language="c++">
            <textobject>
                <textdata fileref="./files/stroustrup/Copy_Assign/src/ctor.cpp" />
            </textobject>
        </programlisting>
    </section>
    <section>
        <title>Hibásan implementált RSA törése</title>
        <para>
            Készítsünk betű gyakoriság alapú törést egy hibásan implementált
            RSA kódoló:
        </para>
        <para>
            <link
            xlink:href="https://arato.inf.unideb.hu/batfai.norbert/UDPROG/deprecated/Prog2_3.pdf">
            https://arato.inf.unideb.hu/batfai.norbert/UDPROG/deprecated/Prog2_3.pdf
            </link>
            (71-73 fólia) által készített titkos szövegen.
        </para>
        <para>
            Az RSA egy nyíltkulcsú titkosító algoritmus, ami azt jelenti, hogy
            a használója rendelkezik egy nyilvános és egy privát kulcssal,
            melyek között ugyan van matematikai összefüggés, viszont szinte
            teljeséggel kizárt, hogy egy nyilvános kulcs ismeretében
            meghatározzuk a privát kulcsot.
        </para>
        <para>
            A lényeg egyszerűen, hogy az üzeneteinket a publikus kulccsal
            enkódoljuk, dekódolni pedig a privát kulccsal lehet.
        </para>
        <para>
            Az RSA titkosítás működési elvéről olvashatunk pl. a <link
                xlink:href="https://hu.wikipedia.org/wiki/RSA-elj%C3%A1r%C3%A1s">
                megfelelő Wikipédia oldalon </link>, viszont ezen feladat célja
            nem az, hogy pontosan megismerjük és tanulmányozzuk az RSA kódolást,
            hanem hogy törjünk fel egy hibásan kódolt RSA sztringet, és vonjuk
            le a következtetést, miszerint felesleges saját titkosítási
            módszereken gondolkoznunk, valószínűleg úgy sem tudnánk olyat
            kitalálni, ami a gyakorlatban jól felhasználható lenne. Ez a
            matematikusok dolga, hagyjuk meg nekik.
        </para>
        <para>
            Nézzük röviden az algoritmus működését:
        </para>
        <itemizedlist>
            <listitem>
                <para>
                    Választunk két nagy prímszámot, <code>p</code>-t és
                    <code>q</code>-t.
                </para>
            </listitem>
            <listitem>
                <para>
                    Kiszámítjuk ezek szorzatát, <code>N</code>-t.
                </para>
            </listitem>
            <listitem>
                <para>
                    Kiszámítjuk az Euler-féle fí-fgv. értékét <code>N</code>-ben.
                </para>
            </listitem>
            <listitem>
                <para>
                    Választunk egy olyan e számot, amely egytől nagyobb és
                    relatív prím <code>fí(N)</code> értékéhez.
                </para>
            </listitem>
            <listitem>
                <para>
                    A d számot kiszámoljuk úgy, hogy a <code>d*e === 1 modulo
                    fí(N)</code> kongruenciaegyenlet teljesüljön.
                </para>
            </listitem>
        </itemizedlist>
        <para>
            A fenti lépések után megkapjuk a privát és publikus kulcsainkat.
        </para>
        <para>
            Javában nagy számokkal egyszerűen dolgozhatunk a BigInteger könyvtár
            behúzása után.
        </para>
        <para>
            A fólián a következő kód szerepelt:
        </para>
        <programlisting language="java">
            <textobject>
                <textdata fileref="./files/stroustrup/RSA/RSA.java" />
            </textobject>
        </programlisting>
        <para>
            Ha ezt lefuttatjuk, akkor meg is kapjuk a hibás algoritmussal
            létrehozott (de működő) kulcsokat:
        </para>
        <screen>
        <![CDATA[$ java RSA
Méret bitekben:
2019
p_i
33063079619837438[...]
p_i hexa
464e522ab5bea5d12[...]
q_i
34967883984989515[...]
m_i
11561459323329467[...]
z_i
11561459323329467[...]
d_i
73577701873973646[...]
e_i
90052108496451452[...]]]>
        </screen>
        <para>
            A következő lépésben futtassuk az RSA2 programot:
        </para>
        <programlisting language="java">
            <textobject>
                <textdata fileref="./files/stroustrup/RSA/RSA2.java" />
            </textobject>
        </programlisting>
        <para>
            Itt végül visszakapjuk a <code>tisztaSzoveg</code> sztringben tárolt
            tiszta szöveg (hibásan) RSA-titkosított, majd visszafejtett
            alakját.
        </para>
        <figure>
            <title>Hibásan implementált RSA törése</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="./pictures/pasta.png" width="100%" />
                </imageobject>
            </mediaobject>
        </figure>
    </section>
    <section>
       <title>Változó argumentumszámú ctor</title>
       <para>
           Készítsünk olyan példát, amely egy képet tesz az alábbi projekt
           Perceptron osztályának bemenetére és a Perceptron ne egy értéket,
           hanem egy ugyanakkora méretű „képet” adjon vissza.  (Lásd még a 4
           hét/Perceptron osztály feladatot is.)
       </para>
       <para>
           Az előző felvonásban szereplő perceptron osztályos feladat kiváló
           alapot fog szolgáltatni ezen feladat megoldásához. Kezdjük úgy, hogy
           azt lehúzzuk, és átírunk néhány dolgot a <filename>main.cc</filename>
           fájlunkban, úgy hogy felkészítsük a programot arra, hogy ezentúl nem
           egy számot fog visszaadni, hanem egy képet:
       </para>
       <programlisting language="c++">
           <textobject>
               <textdata fileref="./files/stroustrup/Perceptron/main.cc" />
           </textobject>
       </programlisting>
       <para>
           Ezekkel a módosításokkal már elvileg képes lesz a programunk arra,
           hogy egy <type>double</type> helyett egy képet adjon vissza, viszont
           a Perceptron osztályt is módosítanunk kell némiképp a kívánt hatás
           elérésének érdekében. Ezt, hogy minél látványosabb legyen, egy <code
               language="bash">diff</code> parancs segítségével mutatnám be.
       </para>
       <figure>
           <title>Szükséges változtatások a Perceptron osztályon</title>
           <mediaobject>
               <imageobject>
                   <imagedata fileref="./pictures/p_pchanges.png" width="100%" />
               </imageobject>
           </mediaobject>
       </figure>
       <figure>
           <title>Szükséges változtatások a main.cc fájlon</title>
           <mediaobject>
               <imageobject>
                   <imagedata fileref="./pictures/p_mainchanges.png" width="100%" />
               </imageobject>
           </mediaobject>
       </figure>
    </section>
    <section>
        <title>
            Egyszerű <filename>String</filename> osztály elkészítése
        </title>
        <para>
            Ebben a feladatban egy egyszerű String osztályt fogunk
            elkészíteni C++-ban.
        </para>
        <para>
            <emphasis role="strong">A megoldás forrása:</emphasis>
        </para>
        <para>
            String.cpp:
        </para>
        <programlisting language="c++">
            <textobject>
                <textdata fileref="./files/stroustrup/String/src/String.cpp"/>
            </textobject>
        </programlisting>
        <para>
            Main.cpp:
        </para>
        <programlisting language="c++">
            <textobject>
                <textdata fileref="./files/stroustrup/String/src/Main.cpp" />
            </textobject>
        </programlisting>
        <para>
            Mit gondolunk, a felső definíciók alapján mi a lesz a
            <filename>Main</filename> program kimenete?
        </para>
        <para>
            Ha azt gondoltuk, hogy
        </para>
        <screen>
<![CDATA[Hello, world!
Hello, world.]]>
        </screen>
        <para>
            akkor helyesen válaszoltunk.
        </para>
    </section>
    <section>
        <title>Összefoglaló</title>
        <para>
            Az előző 5 feladatból írj egy 1 oldalas bemutató "esszé szöveget"!
        </para>
    </section>
</chapter>
