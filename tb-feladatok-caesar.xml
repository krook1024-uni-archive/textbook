<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Caesar!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>
    <section>
        <title><type>int ***</type> háromszögmátrix</title>
        <para>

        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section>
    <section>
        <title>C EXOR titkosító</title>
		<programlisting language="c">
			<textobject>
				<textdata fileref="./files/caesar/xor_e.c" />
			</textobject>
		</programlisting>

        <para>
        	Az XOR titoksító programunk meglehetősen egyszerűen működik. Az
			argumentumból kiolvassuk a kulcsot majd a <code>while</code>
			ciklusban olvassuk az érkező bementet az úgynevezett
			sztenderd inputon. Majd menézzük a bemenetünk méretetét,
			és ennek a teljes tartalmát "titkosítjuk", azaz
			elvégezzük rajta a bitenkénti XOR utasítást
			<code language="c">buffer[i] ^= key[key_index];</code>).
			Ezután vesszük a buffert és kinyomjuk az úgynevezett
			sztendert outputon. Ez azért jó, mert a felhasználó
			egyszerűen inspektálhatja, vagy fájlba írhatja a kimenetet,
			legalábbis UNIX-jellegű operációs rendszerek alatt.
        </para>
    </section>
    <section>
        <title>Java EXOR titkosító</title>
        <para>
            Írj egy EXOR titkosítót Java-ban!
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section>
    <section>
        <title>C EXOR törő</title>
        <para>
            Írj egy olyan C programot, amely megtöri az első feladatban előállított titkos szövegeket!
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section>
    <section>
        <title>Neurális OR, AND és EXOR kapu</title>
        <para>
            R
        </para>
        <para>
            Megoldás videó: <link xlink:href="https://youtu.be/Koyw6IH5ScQ">https://youtu.be/Koyw6IH5ScQ</link>
        </para>
        <para>
            Megoldás forrása: <link xlink:href="https://gitlab.com/nbatfai/bhax/tree/master/attention_raising/NN_R">https://gitlab.com/nbatfai/bhax/tree/master/attention_raising/NN_R</link>
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section>
    <section>
        <title>Hiba-visszaterjesztéses perceptron</title>
        <para>
            C++
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section>


</chapter>
